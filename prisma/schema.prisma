generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  name      String?
  image     String?
  role      Role      @default(MANAGER)
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  sessions  Session[]

  @@index([username])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Supplier {
  id        String     @id @default(cuid())
  name      String
  isActive  Boolean    @default(true)
  parentId  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  parent    Supplier?  @relation("SupplierHierarchy", fields: [parentId], references: [id])
  children  Supplier[] @relation("SupplierHierarchy")
  supplies  Supply[]

  @@index([parentId])
}

model Supply {
  id            String      @id @default(cuid())
  supplierId    String
  invoiceNumber String
  name          String
  description   String?
  quantity      Int
  price         Decimal
  totalAmount   Decimal
  gstAmount     Decimal
  paymentType   PaymentType
  remarks       String?
  suppliedDate  DateTime
  month         Int
  year          Int
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  supplier      Supplier    @relation(fields: [supplierId], references: [id])

  @@index([month, year])
}

model Expense {
  id          String   @id @default(cuid())
  name        String
  issuedDate  DateTime
  month       Int
  year        Int
  amount      Float
  paymentType String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([month, year])
}

model CarServiceItem {
  id           String      @id @default(cuid())
  serviceType  ServiceType
  name         String
  price        Float
  quantity     Int
  totalAmount  Float
  carServiceId String
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  carService   CarService  @relation(fields: [carServiceId], references: [id])
}

model CarService {
  id              String           @id @default(cuid())
  carPlate        String
  carDetails      String?
  ownerName       String?
  phoneNo         String
  carInDateTime   DateTime
  carOutDateTime  DateTime?
  totalAmount     Float
  discountType    DiscountType?
  discountAmount  Float?
  finalAmount     Float
  gstAmount       Float?
  paidInCash      Float?
  paidInCard      Float?
  year            Int
  month           Int
  odo             Int?
  isInvoiceIssued Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  carServiceItems CarServiceItem[]

  @@index([year, month])
}

enum Role {
  ADMIN
  MANAGER
}

enum PaymentType {
  CASH
  CARD
}

enum ServiceType {
  SERVICE
  PARTS
}

enum DiscountType {
  PERCENTAGE
  FIXED
}
